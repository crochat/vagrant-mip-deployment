#!/usr/bin/env bash

COMMAND="/vagrant/dev_repos/mip-deployment/mip"
NODE_TYPE="ui"

EXAREME_IP=""
MIP_LINK=""
EXTERNAL_MIP_PROTOCOL=""
PUBLIC_MIP_PROTOCOL=""
PUBLIC_MIP_HOST=""
KEYCLOAK_PROTOCOL=""
KEYCLOAK_URL=""
KEYCLOAK_REALM=""
KEYCLOAK_CLIENT_ID=""
KEYCLOAK_CLIENT_SECRET=""
TAG=""
BRANCH=""
COMMIT=""

POSITIONAL=()
while [[ $# -gt 0 ]]; do
	case $1 in
		--exareme-ip)
			EXAREME_IP="$2"
			shift
			shift
			;;
		--mip-link)
			MIP_LINK="$2"
			shift
			shift
			;;
		--external-mip-protocol)
			EXTERNAL_MIP_PROTOCOL="$2"
			shift
			shift
			;;
		--public-mip-protocol)
			PUBLIC_MIP_PROTOCOL="$2"
			shift
			shift
			;;
		--public-mip-host)
			PUBLIC_MIP_HOST="$2"
			shift
			shift
			;;
		--keycloak-protocol)
			KEYCLOAK_PROTOCOL="$2"
			shift
			shift
			;;
		--keycloak-url)
			KEYCLOAK_URL="$2"
			shift
			shift
			;;
		--keycloak-realm)
			KEYCLOAK_REALM="$2"
			shift
			shift
			;;
		--keycloak-client-id)
			KEYCLOAK_CLIENT_ID="$2"
			shift
			shift
			;;
		--keycloak-client-secret)
			KEYCLOAK_CLIENT_SECRET="$2"
			shift
			shift
			;;
		--tag)
			TAG="$2"
			shift
			shift
			;;
		--branch)
			BRANCH="$2"
			shift
			shift
			;;
		--commit)
			COMMIT="$2"
			shift
			shift
			;;
		*)
			POSITIONAL+=("$1")
			shift
			;;
	esac
done
set -- "${POSITIONAL[@]}"

ret=1
if [[ "$MIP_LINK" = "" || "$EXTERNAL_MIP_PROTOCOL" = "" || "$PUBLIC_MIP_PROTOCOL" = "" || "$PUBLIC_MIP_HOST" = "" ]]; then
	exit $ret
fi

export DEBIAN_FRONTEND=noninteractive

GENERIC_PARAMS=()
GENERIC_PARAMS+=('--quiet')
GENERIC_PARAMS+=('--yes')
GENERIC_PARAMS+=('--node-type')
GENERIC_PARAMS+=("$NODE_TYPE")

ret=0
if [[ $ret -eq 0 ]]; then
	INSTALL_PARAMS=()
	INSTALL_PARAMS+=('--keep-installer')
	INSTALL_PARAMS+=('--no-run')

	if [[ "$TAG" != "" || "$BRANCH" != "" || "$COMMIT" != "" ]]; then
		INSTALL_PARAMS+=('--force-install-unstable')

		if [[ "$TAG" != "" ]]; then
			INSTALL_PARAMS+=('--version')
			INSTALL_PARAMS+=("$TAG")
		fi
		if [[ "$BRANCH" != "" ]]; then
			INSTALL_PARAMS+=('--branch')
			INSTALL_PARAMS+=("$BRANCH")
		fi
		if [[ "$COMMIT" != "" ]]; then
			INSTALL_PARAMS+=('--commit')
			INSTALL_PARAMS+=("$COMMIT")
		fi
	fi

	echo "$COMMAND ${GENERIC_PARAMS[*]} ${INSTALL_PARAMS[*]} install"
	$COMMAND ${GENERIC_PARAMS[@]} ${INSTALL_PARAMS[@]} install
	ret=$?
fi

if [[ $ret -eq 0 && "$EXAREME_IP" = "" ]]; then
	EXAREME_IP=$(awk '/^guest .*ms / {print $3}' /vagrant/hosts.dat)
	if [[ "$EXAREME_IP" = "" ]]; then
		ret=1
	fi
fi

#if [[ $ret -eq 0 ]]; then
#	if [[ -f /vagrant/dev_repos/mip-deployment/Federation/docker-compose.yml ]]; then
#		if [[ -f /opt/mip-deployment/Federation/docker-compose.yml ]]; then
#			mv /opt/mip-deployment/Federation/docker-compose.yml /opt/mip-deployment/Federation/docker-compose.yml.bak
#		fi
#		if [[ ! -s /opt/mip-deployment/Federation/docker-compose.yml ]]; then
#			ln -s /vagrant/dev_repos/mip-deployment/Federation/docker-compose.yml /opt/mip-deployment/Federation/docker-compose.yml
#		fi
#	fi
#fi

if [[ $ret -eq 0 ]]; then
	# --host MUST MATCH YOUR DESKTOP <HOST> IP or FQDN (i.e. if behind a reverse-proxy)
	echo "Configuring the MIP UI..."
	#/vagrant/dev_repos/mip-deployment/mip --node-type ui --quiet --yes --host $(awk '/^host/ {if(NF == 4) print $4; else print $3}' /vagrant/hosts.dat):$(grep -E -A10 "^[ \t]+config.vm.define \"ui\"" /vagrant/Vagrantfile | grep forwarded_port | awk -F 'host:' '{print $2}' | awk -F ',' '{print $1}' | awk '{print $1}') --exareme-ip $(awk '/^guest .*ms / {print $3}' /vagrant/hosts.dat) --with-keycloak-authentication configure all

	CONFIGURE_PARAMS=()
	CONFIGURE_PARAMS+=('--link')
	CONFIGURE_PARAMS+=("$MIP_LINK")
	CONFIGURE_PARAMS+=('--ext-protocol')
	CONFIGURE_PARAMS+=("$EXTERNAL_MIP_PROTOCOL")
	CONFIGURE_PARAMS+=('--protocol')
	CONFIGURE_PARAMS+=("$PUBLIC_MIP_PROTOCOL")
	CONFIGURE_PARAMS+=('--host')
	CONFIGURE_PARAMS+=("$PUBLIC_MIP_HOST")
	if [[ "$EXAREME_IP" != "" ]]; then
		CONFIGURE_PARAMS+=('--exareme-ip')
		CONFIGURE_PARAMS+=("$EXAREME_IP")
	fi
	if [[ "$KEYCLOAK_PROTOCOL" != "" || "$KEYCLOAK_URL" != "" || "$KEYCLOAK_REALM" != "" || "$KEYCLOAK_CLIENT_ID" != "" || "$KEYCLOAK_CLIENT_SECRET" != "" ]]; then
		CONFIGURE_PARAMS+=('--with-keycloak-authentication')
		if [[ "$KEYCLOAK_PROTOCOL" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-protocol')
			CONFIGURE_PARAMS+=("$KEYCLOAK_PROTOCOL")
		fi
		if [[ "$KEYCLOAK_URL" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-url')
			CONFIGURE_PARAMS+=("$KEYCLOAK_URL")
		fi
		if [[ "$KEYCLOAK_REALM" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-realm')
			CONFIGURE_PARAMS+=("$KEYCLOAK_REALM")
		fi
		if [[ "$KEYCLOAK_CLIENT_ID" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-client-id')
			CONFIGURE_PARAMS+=("$KEYCLOAK_CLIENT_ID")
		fi
		if [[ "$KEYCLOAK_CLIENT_SECRET" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-client-secret')
			CONFIGURE_PARAMS+=("$KEYCLOAK_CLIENT_SECRET")
		fi
	else
		CONFIGURE_PARAMS+=('--without-keycloak-authentication')
	fi

	echo "$COMMAND ${GENERIC_PARAMS[*]} ${CONFIGURE_PARAMS[*]} configure all"
	$COMMAND ${GENERIC_PARAMS[@]} ${CONFIGURE_PARAMS[@]} configure all
	ret=$?
fi

if [[ $ret -eq 0 ]]; then
	echo "Stopping the MIP UI..."
	$COMMAND ${GENERIC_PARAMS[@]} stop
	ret=$?
	if [[ $ret -ne 0 ]]; then
		echo "Exit code $ret. Forcing to 0."
		ret=0
	fi
fi

if [[ $ret -eq 0 ]]; then
	echo "Starting the MIP UI..."
	$COMMAND ${GENERIC_PARAMS[@]} start
	ret=$?
	if [[ $ret -ne 0 ]]; then
		echo "Exit code $ret. Forcing to 0."
		ret=0
	fi
fi

exit $ret
