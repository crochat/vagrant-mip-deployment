#!/usr/bin/env bash

COMMAND="/vagrant/dev_repos/mip-deployment/mip"

MIP_LINK=""
EXTERNAL_MIP_PROTOCOL=""
PUBLIC_MIP_PROTOCOL=""
PUBLIC_MIP_HOST=""
KEYCLOAK_PROTOCOL=""
KEYCLOAK_URL=""
KEYCLOAK_REALM=""
KEYCLOAK_CLIENT_ID=""
KEYCLOAK_CLIENT_SECRET=""
TAG=""
BRANCH=""
COMMIT=""

SCRIPTS_PATH=$(realpath $(dirname $0))
POSITIONAL=()
while [[ $# -gt 0 ]]; do
	case $1 in
		--scripts-path)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				SCRIPTS_PATH="$2"
				shift
			fi
			shift
			;;
		--mip-link)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				MIP_LINK="$2"
				shift
			fi
			shift
			;;
		--external-mip-protocol)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				EXTERNAL_MIP_PROTOCOL="$2"
				shift
			fi
			shift
			;;
		--public-mip-protocol)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				PUBLIC_MIP_PROTOCOL="$2"
				shift
			fi
			shift
			;;
		--public-mip-host)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				PUBLIC_MIP_HOST="$2"
				shift
			fi
			shift
			;;
		--keycloak-protocol)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				KEYCLOAK_PROTOCOL="$2"
				shift
			fi
			shift
			;;
		--keycloak-url)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				KEYCLOAK_URL="$2"
				shift
			fi
			shift
			;;
		--keycloak-realm)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				KEYCLOAK_REALM="$2"
				shift
			fi
			shift
			;;
		--keycloak-client-id)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				KEYCLOAK_CLIENT_ID="$2"
				shift
			fi
			shift
			;;
		--keycloak-client-secret)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				KEYCLOAK_CLIENT_SECRET="$2"
				shift
			fi
			shift
			;;
		--tag)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				TAG="$2"
				shift
			fi
			shift
			;;
		--branch)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				BRANCH="$2"
				shift
			fi
			shift
			;;
		--commit)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				COMMIT="$2"
				shift
			fi
			shift
			;;
		*)
			POSITIONAL+=("$1")
			shift
			;;
	esac
done
set -- "${POSITIONAL[@]}"

ret=1
if [[ "$MIP_LINK" = "" || "$EXTERNAL_MIP_PROTOCOL" = "" || "$PUBLIC_MIP_PROTOCOL" = "" || "$PUBLIC_MIP_HOST" = "" ]]; then
	exit $ret
fi

export DEBIAN_FRONTEND=noninteractive

GENERIC_PARAMS=()
GENERIC_PARAMS+=('--quiet')
GENERIC_PARAMS+=('--yes')

ret=0
if [[ $ret -eq 0 ]]; then
	INSTALL_PARAMS=()
	INSTALL_PARAMS+=('--keep-installer')
	INSTALL_PARAMS+=('--no-run')

	if [[ "$TAG" != "" || "$BRANCH" != "" || "$COMMIT" != "" ]]; then
		INSTALL_PARAMS+=('--force-install-unstable')

		if [[ "$TAG" != "" ]]; then
			INSTALL_PARAMS+=('--version')
			INSTALL_PARAMS+=("$TAG")
		fi
		if [[ "$BRANCH" != "" ]]; then
			INSTALL_PARAMS+=('--branch')
			INSTALL_PARAMS+=("$BRANCH")
		fi
		if [[ "$TAG" != "" ]]; then
			INSTALL_PARAMS+=('--commit')
			INSTALL_PARAMS+=("$COMMIT")
		fi
	fi

	echo "$COMMAND ${GENERIC_PARAMS[*]} ${INSTALL_PARAMS[*]} install"
	$COMMAND ${GENERIC_PARAMS[@]} ${INSTALL_PARAMS[@]} install
	ret=$?
fi

if [[ $ret -eq 0 ]]; then
	# --host MUST MATCH YOUR DESKTOP <HOST> IP or FQDN (i.e. if behind a reverse-proxy)
	echo "Configuring the MIP..."

	CONFIGURE_PARAMS=()
	CONFIGURE_PARAMS+=('--link')
	CONFIGURE_PARAMS+=("$MIP_LINK")
	CONFIGURE_PARAMS+=('--ext-protocol')
	CONFIGURE_PARAMS+=("$EXTERNAL_MIP_PROTOCOL")
	CONFIGURE_PARAMS+=('--protocol')
	CONFIGURE_PARAMS+=("$PUBLIC_MIP_PROTOCOL")
	CONFIGURE_PARAMS+=('--host')
	CONFIGURE_PARAMS+=("$PUBLIC_MIP_HOST")
	if [[ "$KEYCLOAK_PROTOCOL" != "" || "$KEYCLOAK_URL" != "" || "$KEYCLOAK_REALM" != "" || "$KEYCLOAK_CLIENT_ID" != "" || "$KEYCLOAK_CLIENT_SECRET" != "" ]]; then
		CONFIGURE_PARAMS+=('--with-keycloak-authentication')
		if [[ "$KEYCLOAK_PROTOCOL" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-protocol')
			CONFIGURE_PARAMS+=("$KEYCLOAK_PROTOCOL")
		fi
		if [[ "$KEYCLOAK_URL" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-url')
			CONFIGURE_PARAMS+=("$KEYCLOAK_URL")
		fi
		if [[ "$KEYCLOAK_REALM" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-realm')
			CONFIGURE_PARAMS+=("$KEYCLOAK_REALM")
		fi
		if [[ "$KEYCLOAK_CLIENT_ID" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-client-id')
			CONFIGURE_PARAMS+=("$KEYCLOAK_CLIENT_ID")
		fi
		if [[ "$KEYCLOAK_CLIENT_SECRET" != "" ]]; then
			CONFIGURE_PARAMS+=('--keycloak-client-secret')
			CONFIGURE_PARAMS+=("$KEYCLOAK_CLIENT_SECRET")
		fi
	else
		CONFIGURE_PARAMS+=('--without-keycloak-authentication')
	fi

	echo "$COMMAND ${GENERIC_PARAMS[*]} ${CONFIGURE_PARAMS[*]} configure all"
	$COMMAND ${GENERIC_PARAMS[@]} ${CONFIGURE_PARAMS[@]} configure all
	ret=$?
fi

if [[ $ret -eq 0 ]]; then
	echo "Stopping the MIP..."
	echo "$COMMAND ${GENERIC_PARAMS[*]} stop"
	$COMMAND ${GENERIC_PARAMS[@]} stop
	ret=$?
	if [[ $ret -ne 0 ]]; then
		echo "Exit code $ret. Forcing to 0."
		ret=0
	fi
fi

if [[ $ret -eq 0 ]]; then
	if [[ -d /vagrant/data ]]; then
		echo "rm -rf /opt/mip-deployment/data"
		rm -rf /opt/mip-deployment/data
		ret=$?
	else
		echo "mv /opt/mip-deployment/data /vagrant/"
		mv /opt/mip-deployment/data /vagrant/
		ret=$?
	fi

	if [[ $ret -eq 0 ]]; then
		echo "ln -s /vagrant/data /opt/mip-deployment/"
		ln -s /vagrant/data /opt/mip-deployment/
	fi
fi

#if [[ $ret -eq 0 ]]; then
#	if [[ -f /vagrant/dev_repos/mip-deployment/docker-compose.yml ]]; then
#		if [[ -f /opt/mip-deployment/docker-compose.yml ]]; then
#			mv /opt/mip-deployment/docker-compose.yml /opt/mip-deployment/docker-compose.yml.bak
#		fi
#		if [[ ! -s /opt/mip-deployment/docker-compose.yml ]]; then
#			ln -s /vagrant/dev_repos/mip-deployment/docker-compose.yml /opt/mip-deployment/docker-compose.yml
#		fi
#	fi
#fi

if [[ $ret -eq 0 ]]; then
	echo "$COMMAND data consolidate"
	$COMMAND data consolidate
	ret=$?
fi

if [[ $ret -eq 0 ]]; then
	echo "$COMMAND data compile"
	$COMMAND data compile
	ret=$?
fi

if [[ $ret -eq 0 ]]; then
	echo "Starting the MIP..."
	echo "$COMMAND ${GENERIC_PARAMS[*]} start"
	$COMMAND ${GENERIC_PARAMS[@]} start
	ret=$?
	if [[ $ret -ne 0 ]]; then
		echo "Exit code $ret. Forcing to 0."
		ret=0
	fi
fi

exit $ret
