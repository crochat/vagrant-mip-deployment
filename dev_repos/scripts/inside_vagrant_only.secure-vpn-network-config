#!/usr/bin/env bash

VPN_HOST=""
VPN_CIDR_ADDRESS=""
VPN_CIDR_ROUTE=""
VPN_GATEWAY_ADDRESS=""

VPN_DEVICE=""
NETPLAN_CHANGE=0

SCRIPTS_PATH=$(realpath $(dirname $0))
POSITIONAL=()
while [[ $# -gt 0 ]]; do
	case $1 in
		--scripts-path)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				SCRIPTS_PATH="$2"
				shift
			fi
			shift
			;;
		--vpn-host)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				VPN_HOST="$2"
				shift
			fi
			shift
			;;
		--vpn-cidr-address)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				VPN_CIDR_ADDRESS="$2"
				shift
			fi
			shift
			;;
		--vpn-cidr-route)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				VPN_CIDR_ROUTE="$2"
				shift
			fi
			shift
			;;
		--vpn-gateway-address)
			if [[ "$2" != "" && "$(echo $2 | cut -c1)" != "-" ]]; then
				VPN_GATEWAY_ADDRESS="$2"
				shift
			fi
			shift
			;;
		*)
			POSITIONAL+=("$1")
			shift
			;;
	esac
done
set -- "${POSITIONAL[@]}"

result=0
if [[ "$VPN_HOST" = "" || "$VPN_CIDR_ADDRESS" = "" ]]; then
	exit $result
fi

export DEBIAN_FRONTEND=noninteractive

_get_vpn_dev(){
	local result=1

	if [[ "$VPN_DEVICE" != "" ]]; then
		result=0
	fi

	if [[ $result -ne 0 && -f /etc/openvpn/client/${VPN_HOST}.conf ]]; then
		vpndev=$(grep '^dev ' /etc/openvpn/client/${VPN_HOST}.conf | cut -d' ' -f2)
		if [[ "$vpndev" != "" ]]; then
			VPN_DEVICE="$vpndev"
			result=0
		fi
	fi

	if [[ "$VPN_DEVICE" != "" ]]; then
		result=0
	else
		echo "There was an issue while trying to determine the VPN connection device!" >/dev/stderr
	fi

	return $result
}

if [[ $result -eq 0 && "$(command -v netplan)" = "" ]]; then
	echo "Installing netplan.io..."

	apt-get install --no-install-recommends --yes netplan.io
	result=$?
fi

if [[ $result -eq 0 && ! -f /etc/netplan/02-${VPN_HOST}.yaml ]]; then
	echo "Preparing the basic VPN networking in netplan..."

	_get_vpn_dev
	result=$?

	if [[ $result -eq 0 ]]; then
		cat << EOF > /etc/netplan/02-${VPN_HOST}.yaml
network:
    version: 2
    ethernets:
        $VPN_DEVICE:
            dhcp4: false
            dhcp6: false
EOF
		result=$?
	fi

	if [[ $result -eq 0 && ! -f /etc/netplan/02-${VPN_HOST}.yaml ]]; then
		echo "There was an issue while trying to set the basic VPN networking in /etc/netplan/02-${VPN_HOST}.yaml" >/dev/stderr
		result=1
	else
		NETPLAN_CHANGE=1
	fi
fi

if [[ $NETPLAN_CHANGE -eq 1 ]]; then
	netplan apply
	result=$?
fi

if [[ $result -eq 0 && "$(command -v networkd-dispatcher)" = "" ]]; then
	echo "Installing networkd-dispatcher..."

	apt-get install --no-install-recommends --yes networkd-dispatcher
	result=$?
fi

if [[ $result -eq 0 && ! -d /etc/networkd-dispatcher/configured.d ]]; then
	echo "Preparing 'configured' state in networkd-dispatcher..."

	mkdir -p /etc/networkd-dispatcher/configured.d
	result=$?
fi

if [[ $result -eq 0 && ! -f /etc/networkd-dispatcher/configured.d/10-${VPN_HOST}-configured ]]; then
	echo "Preparing the 'configured' state VPN network addressing in networkd-dispatcher..."
	_get_vpn_dev
	result=$?

	if [[ $result -eq 0 ]]; then
		cat << EOF > /etc/networkd-dispatcher/configured.d/10-${VPN_HOST}-configured
#!/bin/sh

set -e

if [ "\$IFACE" = "$VPN_DEVICE" ]; then
	logger \$0 IFACE \$IFACE BEGIN
	/sbin/ip address add $VPN_CIDR_ADDRESS dev \$IFACE
	logger \$0 IFACE \$IFACE END
fi
EOF
		result=$?
	fi

	if [[ $result -eq 0 && -f /etc/networkd-dispatcher/configured.d/10-${VPN_HOST}-configured ]]; then
		chmod +x /etc/networkd-dispatcher/configured.d/10-${VPN_HOST}-configured
		result=$?
	else
		echo "There was an issue while trying to prepare the VPN network addressing script in /etc/networkd-dispatcher/configured.d/10-${VPN_HOST}-configured!" >/dev/stderr
		result=1
	fi
fi

if [[ $result -eq 0 && "$VPN_CIDR_ROUTE" != "" && "$VPN_GATEWAY_ADDRESS" != "" && ! -f /etc/networkd-dispatcher/routable.d/10-${VPN_HOST}-routable ]]; then
	echo "Preparing the 'routable' state VPN network routing in networkd-dispatcher..."

	cat << EOF > /etc/networkd-dispatcher/routable.d/10-${VPN_HOST}-routable
#!/bin/sh

set -e

if [ "\$IFACE" = "$VPN_DEVICE" ]; then
	logger \$0 IFACE \$IFACE BEGIN
	/sbin/ip route add $VPN_CIDR_ROUTE via $VPN_GATEWAY_ADDRESS dev \$IFACE
	logger \$0 IFACE \$IFACE END
fi
EOF
	result=$?

	if [[ $result -eq 0 && -f /etc/networkd-dispatcher/routable.d/10-${VPN_HOST}-routable ]]; then
		chmod +x /etc/networkd-dispatcher/routable.d/10-${VPN_HOST}-routable
		result=$?
	else
		echo "There was an issue while trying to prepare the VPN network addressing script in /etc/networkd-dispatcher/routable.d/10-${VPN_HOST}-routable!" >/dev/stderr
		result=1
	fi
fi


if [[ $result -eq 0 && ! -s /etc/systemd/system/multi-user.target.wants/openvpn@${VPN_HOST}.service ]]; then
	echo "Enabling openvpn@${VPN_HOST} service..."

	systemctl enable openvpn@${VPN_HOST}.service
	result=$?
fi

if [[ $result -ne 0 ]]; then
	echo "There was an error while trying to prepare the VPN configuration!" >/dev/stderr
fi

exit $result
